name: Standard Build Check

on:
  push:
  pull_request:
  workflow_dispatch:
    inputs:
      vss-version:
        required: false
        type: string
  workflow_call:
    inputs:
      vss-version:
        required: false
        type: string

jobs:
  buildtest:
    name: Build Test
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Install vss-tools dependencies
        run: |
          python -V
          python -m pip --quiet --no-input install --upgrade pip
          python -m pip --quiet --no-input install --upgrade  wheel
          ./scripts/install_vss_tools.sh
          echo done!

      - name: Test mandatory targets
        run: |
          if [ "${{ inputs.vss-version }}" != "" ]; then
            export VSS_VERSION="${{ inputs.vss-version }}"
          fi
          make mandatory_targets

      - name: "Uploading  artifacts"
        uses: actions/upload-artifact@v4
        with:
          name: vss-artifacts
          # Listing all artifacts that shall be managed as release artifacts
          path: |
            vss.csv
            vss.fidl
            vss.grapql.ts
            vss.idl
            vss.json
            vss.jsonschema
            vss.yaml
            vss_noexpand.json
            vss_samm.tar.gz
            vss_apigear.tar.gz
          if-no-files-found: error

      - name: Test that ddsidl is correct
        run: |
          pip install cyclonedds
          idlc vss*.idl


      - name: Prepare for CSV check
        uses: actions/setup-go@v5
        with:
          go-version: 'stable'
          cache: false

      - name: Test that CSV generated by vss-tools is correct
        run: |
          # Install csvlint to check compliance with https://datatracker.ietf.org/doc/html/rfc4180
          go install github.com/Clever/csvlint/cmd/csvlint@latest
          csvlint vss*.csv

      - name: Test optional targets. NOTE - always succeeds
        run: |
          make -k optional_targets || true
