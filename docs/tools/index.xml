<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Tools on Vehicle Signal Specification</title>
    <link>https://danielwilms.github.io/vehicle_signal_specification/tools/</link>
    <description>Recent content in Tools on Vehicle Signal Specification</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 04 Aug 2019 13:12:25 +0200</lastBuildDate>
    
	<atom:link href="https://danielwilms.github.io/vehicle_signal_specification/tools/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Requirements</title>
      <link>https://danielwilms.github.io/vehicle_signal_specification/tools/requirements/</link>
      <pubDate>Sun, 04 Aug 2019 13:18:17 +0200</pubDate>
      
      <guid>https://danielwilms.github.io/vehicle_signal_specification/tools/requirements/</guid>
      <description> The tools for generating custom serialization from the specification are written in Python. Make sure that you have the python YAML parser, PyYAML, installed.
INSTALL PYTHON YAML PARSER On ubuntu:
sudo apt-get install python-yaml  On non-ubuntu systems, install from:
http://pyyaml.org/wiki/PyYAML  </description>
    </item>
    
    <item>
      <title>Usage</title>
      <link>https://danielwilms.github.io/vehicle_signal_specification/tools/usage/</link>
      <pubDate>Sun, 04 Aug 2019 13:21:34 +0200</pubDate>
      
      <guid>https://danielwilms.github.io/vehicle_signal_specification/tools/usage/</guid>
      <description>After installing the dependencies, as described in the requirements, you can simply run:
make  The results will be stored in vss_$VERSION.[xxx], where $VERSION is the contents of the VERSION file and xxx is the appropriate file extension for the type of output being produced. For example, the JSON version of the output will have a .json extension.
Changes to files under the spec/ directory results in changes to the generated files, namely .</description>
    </item>
    
  </channel>
</rss>